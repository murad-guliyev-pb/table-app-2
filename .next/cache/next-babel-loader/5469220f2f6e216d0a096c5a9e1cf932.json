{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mguliyev/Documents/table-app-new/components/table/tableRow.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport TableCellComponent from \"@material-ui/core/TableCell\";\nimport TableRowComponent from \"@material-ui/core/TableRow\";\nimport React, { useEffect, useState } from \"react\";\nimport { validateDateOfBirth, validateName, validatePhoneNumber, validatePosition, validateSurname } from \"../../helpers/utils\";\nimport TableCell from \"./tableCell\";\nimport TableRowActions from \"./tableRowActions\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nvar TableRow = function TableRow(_ref) {\n  _s();\n\n  var employeeData = _ref.employeeData,\n      deletedEmployees = _ref.deletedEmployees,\n      isEditing = _ref.isEditing,\n      setIsEditing = _ref.setIsEditing,\n      onEmployeeChange = _ref.onEmployeeChange,\n      onEmployeeDelete = _ref.onEmployeeDelete,\n      onEmployeeRestore = _ref.onEmployeeRestore;\n\n  var _useState = useState(false),\n      isDeleted = _useState[0],\n      setIsDeleted = _useState[1];\n\n  var _useState2 = useState(employeeData),\n      employee = _useState2[0],\n      setEmployee = _useState2[1];\n\n  var _useState3 = useState([]),\n      errors = _useState3[0],\n      setErrors = _useState3[1];\n\n  var keys = Object.keys(employee);\n  useEffect(function () {\n    setEmployee(employeeData);\n  }, [employeeData, isEditing]);\n  useEffect(function () {\n    var isEmployeeInDeletedEmployeesList = deletedEmployees.some(function (item) {\n      return item.id === employee.id;\n    });\n    setIsDeleted(isEmployeeInDeletedEmployeesList);\n  }, [deletedEmployees]);\n\n  var validateEmployee = function validateEmployee(employee) {\n    var name = employee.name,\n        surname = employee.surname,\n        dateOfBirth = employee.dateOfBirth,\n        position = employee.position,\n        phoneNumber = employee.phoneNumber;\n    var _errors = [];\n\n    if (name === \"\" || !validateName(name)) {\n      _errors.push(\"name\");\n    }\n\n    if (surname === \"\" || !validateSurname(surname)) {\n      _errors.push(\"surname\");\n    }\n\n    if (dateOfBirth === \"\" || !validateDateOfBirth(dateOfBirth)) {\n      _errors.push(\"dateOfBirth\");\n    }\n\n    if (position === \"\" || !validatePosition(position)) {\n      _errors.push(\"position\");\n    }\n\n    if (phoneNumber === \"\" || !validatePhoneNumber(phoneNumber)) {\n      _errors.push(\"phoneNumber\");\n    }\n\n    setErrors(_errors);\n    return _errors.length === 0;\n  };\n\n  var handleCellChange = function handleCellChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n\n    for (var key in employee) {\n      if (key === name) {\n        var _employee = _objectSpread({}, employee);\n\n        _employee[key] = value;\n        setEmployee(_employee);\n      }\n    }\n  };\n\n  var handleEdit = function handleEdit() {\n    setErrors([]);\n    setIsEditing(employee.id);\n  };\n\n  var handleSave = function handleSave() {\n    if (validateEmployee(employee)) {\n      onEmployeeChange(employee);\n      setIsEditing(\"\");\n    }\n  };\n\n  var handleDelete = function handleDelete() {\n    onEmployeeDelete(employee.id);\n    setIsEditing(\"\");\n  };\n\n  var handleRestore = function handleRestore() {\n    onEmployeeRestore(employee.id);\n  };\n\n  return ___EmotionJSX(TableRowComponent, {\n    style: {\n      backgroundColor: isDeleted ? \"rgba(220, 0, 78, 0.08)\" : \"inherit\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    },\n    __self: _this\n  }, keys.map(function (key) {\n    return ___EmotionJSX(TableCellComponent, {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      },\n      __self: _this\n    }, ___EmotionJSX(TableCell, {\n      errors: errors,\n      name: key,\n      isEditing: isEditing,\n      value: employee[key],\n      onChange: handleCellChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      },\n      __self: _this\n    }));\n  }), ___EmotionJSX(TableCellComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    },\n    __self: _this\n  }, ___EmotionJSX(TableRowActions, {\n    isEditing: isEditing,\n    isDeleted: isDeleted,\n    onEdit: handleEdit,\n    onSave: handleSave,\n    onDelete: handleDelete,\n    onRestore: handleRestore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    },\n    __self: _this\n  })));\n};\n\n_s(TableRow, \"FAZH2zcylsPaHUCyS7ijcxWvxHU=\");\n\n_c = TableRow;\nexport default TableRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableRow\");","map":{"version":3,"sources":["/Users/mguliyev/Documents/table-app-new/components/table/tableRow.tsx"],"names":["TableCellComponent","TableRowComponent","React","useEffect","useState","validateDateOfBirth","validateName","validatePhoneNumber","validatePosition","validateSurname","TableCell","TableRowActions","TableRow","employeeData","deletedEmployees","isEditing","setIsEditing","onEmployeeChange","onEmployeeDelete","onEmployeeRestore","isDeleted","setIsDeleted","employee","setEmployee","errors","setErrors","keys","Object","isEmployeeInDeletedEmployeesList","some","item","id","validateEmployee","name","surname","dateOfBirth","position","phoneNumber","_errors","push","length","handleCellChange","event","target","value","key","_employee","handleEdit","handleSave","handleDelete","handleRestore","backgroundColor","map"],"mappings":";;;;;;;;;;;AAAA,OAAOA,kBAAP,MAA+B,6BAA/B;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAGA,SACIC,mBADJ,EAEIC,YAFJ,EAGIC,mBAHJ,EAIIC,gBAJJ,EAKIC,eALJ,QAMO,qBANP;AAOA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAYA,IAAMC,QAA0B,GAAG,SAA7BA,QAA6B,OAQhB;AAAA;;AAAA,MAPfC,YAOe,QAPfA,YAOe;AAAA,MANfC,gBAMe,QANfA,gBAMe;AAAA,MALfC,SAKe,QALfA,SAKe;AAAA,MAJfC,YAIe,QAJfA,YAIe;AAAA,MAHfC,gBAGe,QAHfA,gBAGe;AAAA,MAFfC,gBAEe,QAFfA,gBAEe;AAAA,MADfC,iBACe,QADfA,iBACe;;AAAA,kBACmBf,QAAQ,CAAU,KAAV,CAD3B;AAAA,MACRgB,SADQ;AAAA,MACGC,YADH;;AAAA,mBAEiBjB,QAAQ,CAAYS,YAAZ,CAFzB;AAAA,MAERS,QAFQ;AAAA,MAEEC,WAFF;;AAAA,mBAGanB,QAAQ,CAAyB,EAAzB,CAHrB;AAAA,MAGRoB,MAHQ;AAAA,MAGAC,SAHA;;AAIf,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYJ,QAAZ,CAAb;AAEAnB,EAAAA,SAAS,CAAC,YAAM;AACZoB,IAAAA,WAAW,CAACV,YAAD,CAAX;AACH,GAFQ,EAEN,CAACA,YAAD,EAAeE,SAAf,CAFM,CAAT;AAIAZ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMyB,gCAAgC,GAAGd,gBAAgB,CAACe,IAAjB,CAAsB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,EAAL,KAAYT,QAAQ,CAACS,EAA/B;AAAA,KAAtB,CAAzC;AACAV,IAAAA,YAAY,CAACO,gCAAD,CAAZ;AACH,GAHQ,EAGN,CAACd,gBAAD,CAHM,CAAT;;AAKA,MAAMkB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACV,QAAD,EAAyB;AAAA,QACtCW,IADsC,GACgBX,QADhB,CACtCW,IADsC;AAAA,QAChCC,OADgC,GACgBZ,QADhB,CAChCY,OADgC;AAAA,QACvBC,WADuB,GACgBb,QADhB,CACvBa,WADuB;AAAA,QACVC,QADU,GACgBd,QADhB,CACVc,QADU;AAAA,QACAC,WADA,GACgBf,QADhB,CACAe,WADA;AAE9C,QAAMC,OAA4B,GAAG,EAArC;;AAEA,QAAIL,IAAI,KAAK,EAAT,IAAe,CAAC3B,YAAY,CAAC2B,IAAD,CAAhC,EAAwC;AACpCK,MAAAA,OAAO,CAACC,IAAR,CAAa,MAAb;AACH;;AAED,QAAIL,OAAO,KAAK,EAAZ,IAAkB,CAACzB,eAAe,CAACyB,OAAD,CAAtC,EAAiD;AAC7CI,MAAAA,OAAO,CAACC,IAAR,CAAa,SAAb;AACH;;AAED,QAAIJ,WAAW,KAAK,EAAhB,IAAsB,CAAC9B,mBAAmB,CAAC8B,WAAD,CAA9C,EAA6D;AACzDG,MAAAA,OAAO,CAACC,IAAR,CAAa,aAAb;AACH;;AAED,QAAIH,QAAQ,KAAK,EAAb,IAAmB,CAAC5B,gBAAgB,CAAC4B,QAAD,CAAxC,EAAoD;AAChDE,MAAAA,OAAO,CAACC,IAAR,CAAa,UAAb;AACH;;AAED,QAAIF,WAAW,KAAK,EAAhB,IAAsB,CAAC9B,mBAAmB,CAAC8B,WAAD,CAA9C,EAA6D;AACzDC,MAAAA,OAAO,CAACC,IAAR,CAAa,aAAb;AACH;;AAEDd,IAAAA,SAAS,CAACa,OAAD,CAAT;AACA,WAAOA,OAAO,CAACE,MAAR,KAAmB,CAA1B;AACH,GA1BD;;AA4BA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAgD;AAAA,wBAGjEA,KAHiE,CAEjEC,MAFiE;AAAA,QAEvDV,IAFuD,iBAEvDA,IAFuD;AAAA,QAEjDW,KAFiD,iBAEjDA,KAFiD;;AAKrE,SAAK,IAAMC,GAAX,IAAkBvB,QAAlB,EAA4B;AACxB,UAAIuB,GAAG,KAAKZ,IAAZ,EAAkB;AACd,YAAMa,SAAoB,qBAAQxB,QAAR,CAA1B;;AACAwB,QAAAA,SAAS,CAACD,GAAD,CAAT,GAAoCD,KAApC;AACArB,QAAAA,WAAW,CAACuB,SAAD,CAAX;AACH;AACJ;AACJ,GAZD;;AAcA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBtB,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAT,IAAAA,YAAY,CAACM,QAAQ,CAACS,EAAV,CAAZ;AACH,GAHD;;AAKA,MAAMiB,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,QAAIhB,gBAAgB,CAACV,QAAD,CAApB,EAAgC;AAC5BL,MAAAA,gBAAgB,CAACK,QAAD,CAAhB;AACAN,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACH;AACJ,GALD;;AAOA,MAAMiC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB/B,IAAAA,gBAAgB,CAACI,QAAQ,CAACS,EAAV,CAAhB;AACAf,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,GAHD;;AAKA,MAAMkC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB/B,IAAAA,iBAAiB,CAACG,QAAQ,CAACS,EAAV,CAAjB;AACH,GAFD;;AAIA,SACI,cAAC,iBAAD;AAAmB,IAAA,KAAK,EAAE;AAAEoB,MAAAA,eAAe,EAAE/B,SAAS,GAAG,wBAAH,GAA8B;AAA1D,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,IAAI,CAAC0B,GAAL,CAAS,UAACP,GAAD;AAAA,WACN,cAAC,kBAAD;AAAoB,MAAA,GAAG,EAAEA,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,cAAC,SAAD;AACI,MAAA,MAAM,EAAErB,MADZ;AAEI,MAAA,IAAI,EAAEqB,GAFV;AAGI,MAAA,SAAS,EAAE9B,SAHf;AAII,MAAA,KAAK,EAAEO,QAAQ,CAACuB,GAAD,CAJnB;AAKI,MAAA,QAAQ,EAAEJ,gBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADM;AAAA,GAAT,CADL,EAYI,cAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,cAAC,eAAD;AACI,IAAA,SAAS,EAAE1B,SADf;AAEI,IAAA,SAAS,EAAEK,SAFf;AAGI,IAAA,MAAM,EAAE2B,UAHZ;AAII,IAAA,MAAM,EAAEC,UAJZ;AAKI,IAAA,QAAQ,EAAEC,YALd;AAMI,IAAA,SAAS,EAAEC,aANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAZJ,CADJ;AAyBH,CA/GD;;GAAMtC,Q;;KAAAA,Q;AAiHN,eAAeA,QAAf","sourcesContent":["import TableCellComponent from \"@material-ui/core/TableCell\";\nimport TableRowComponent from \"@material-ui/core/TableRow\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { IEmployee } from \"../../helpers/models\";\nimport {\n    validateDateOfBirth,\n    validateName,\n    validatePhoneNumber,\n    validatePosition,\n    validateSurname,\n} from \"../../helpers/utils\";\nimport TableCell from \"./tableCell\";\nimport TableRowActions from \"./tableRowActions\";\n\nexport interface IProps {\n    employeeData: IEmployee;\n    deletedEmployees: IEmployee[];\n    isEditing: boolean;\n    setIsEditing: (employeeId: string) => void;\n    onEmployeeChange: (employee: IEmployee) => void;\n    onEmployeeDelete: (employeeId: string) => void;\n    onEmployeeRestore: (employeeId: string) => void;\n}\n\nconst TableRow: React.FC<IProps> = ({\n    employeeData,\n    deletedEmployees,\n    isEditing,\n    setIsEditing,\n    onEmployeeChange,\n    onEmployeeDelete,\n    onEmployeeRestore,\n}): JSX.Element => {\n    const [isDeleted, setIsDeleted] = useState<boolean>(false);\n    const [employee, setEmployee] = useState<IEmployee>(employeeData);\n    const [errors, setErrors] = useState<Array<keyof IEmployee>>([]);\n    const keys = Object.keys(employee) as (keyof IEmployee)[];\n\n    useEffect(() => {\n        setEmployee(employeeData);\n    }, [employeeData, isEditing]);\n\n    useEffect(() => {\n        const isEmployeeInDeletedEmployeesList = deletedEmployees.some((item) => item.id === employee.id);\n        setIsDeleted(isEmployeeInDeletedEmployeesList);\n    }, [deletedEmployees]);\n\n    const validateEmployee = (employee: IEmployee) => {\n        const { name, surname, dateOfBirth, position, phoneNumber } = employee;\n        const _errors: (keyof IEmployee)[] = [];\n\n        if (name === \"\" || !validateName(name)) {\n            _errors.push(\"name\");\n        }\n\n        if (surname === \"\" || !validateSurname(surname)) {\n            _errors.push(\"surname\");\n        }\n\n        if (dateOfBirth === \"\" || !validateDateOfBirth(dateOfBirth)) {\n            _errors.push(\"dateOfBirth\");\n        }\n\n        if (position === \"\" || !validatePosition(position)) {\n            _errors.push(\"position\");\n        }\n\n        if (phoneNumber === \"\" || !validatePhoneNumber(phoneNumber)) {\n            _errors.push(\"phoneNumber\");\n        }\n\n        setErrors(_errors);\n        return _errors.length === 0;\n    };\n\n    const handleCellChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const {\n            target: { name, value },\n        } = event;\n\n        for (const key in employee) {\n            if (key === name) {\n                const _employee: IEmployee = { ...employee };\n                _employee[key as keyof IEmployee] = value;\n                setEmployee(_employee);\n            }\n        }\n    };\n\n    const handleEdit = () => {\n        setErrors([]);\n        setIsEditing(employee.id);\n    };\n\n    const handleSave = () => {\n        if (validateEmployee(employee)) {\n            onEmployeeChange(employee);\n            setIsEditing(\"\");\n        }\n    };\n\n    const handleDelete = () => {\n        onEmployeeDelete(employee.id);\n        setIsEditing(\"\");\n    };\n\n    const handleRestore = () => {\n        onEmployeeRestore(employee.id);\n    };\n\n    return (\n        <TableRowComponent style={{ backgroundColor: isDeleted ? \"rgba(220, 0, 78, 0.08)\" : \"inherit\" }}>\n            {keys.map((key) => (\n                <TableCellComponent key={key}>\n                    <TableCell\n                        errors={errors}\n                        name={key}\n                        isEditing={isEditing}\n                        value={employee[key]}\n                        onChange={handleCellChange}\n                    />\n                </TableCellComponent>\n            ))}\n            <TableCellComponent>\n                <TableRowActions\n                    isEditing={isEditing}\n                    isDeleted={isDeleted}\n                    onEdit={handleEdit}\n                    onSave={handleSave}\n                    onDelete={handleDelete}\n                    onRestore={handleRestore}\n                />\n            </TableCellComponent>\n        </TableRowComponent>\n    );\n};\n\nexport default TableRow;\n"]},"metadata":{},"sourceType":"module"}