{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mguliyev/Documents/table-app-new/components/table/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Paper from \"@material-ui/core/Paper\";\nimport TableComponent from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React, { useState } from \"react\";\nimport TableHead from \"./tableHead\";\nimport Row from \"./tableRow\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nvar Table = function Table(_ref) {\n  _s();\n\n  var employees = _ref.employees,\n      deletedEmployees = _ref.deletedEmployees,\n      onEmployeeChange = _ref.onEmployeeChange,\n      onEmployeeDelete = _ref.onEmployeeDelete,\n      onEmployeeRestore = _ref.onEmployeeRestore;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(5),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  var _useState = useState(\"\"),\n      editingEmployeeId = _useState[0],\n      setEditingEmployeeId = _useState[1];\n\n  var handleEditingEmployee = function handleEditingEmployee(employeeId) {\n    setEditingEmployeeId(employeeId);\n  };\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  var getEmployees = function getEmployees() {\n    if (rowsPerPage > 0) {\n      return employees.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n    }\n\n    return employees;\n  };\n\n  return ___EmotionJSX(TableContainer, {\n    component: Paper,\n    elevation: 2,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    },\n    __self: _this\n  }, ___EmotionJSX(TableComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    },\n    __self: _this\n  }, ___EmotionJSX(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    },\n    __self: _this\n  }), ___EmotionJSX(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    },\n    __self: _this\n  }, getEmployees().map(function (employee) {\n    return ___EmotionJSX(Row, {\n      key: employee.id,\n      employeeData: employee,\n      deletedEmployees: deletedEmployees,\n      isEditing: employee.id === editingEmployeeId,\n      setIsEditing: handleEditingEmployee,\n      onEmployeeChange: onEmployeeChange,\n      onEmployeeDelete: onEmployeeDelete,\n      onEmployeeRestore: onEmployeeRestore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      },\n      __self: _this\n    });\n  })), ___EmotionJSX(TableFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    },\n    __self: _this\n  }, ___EmotionJSX(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    },\n    __self: _this\n  }, ___EmotionJSX(TablePagination, {\n    rowsPerPageOptions: [5, 10, {\n      label: \"All\",\n      value: -1\n    }],\n    colSpan: 2,\n    count: employees.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    },\n    __self: _this\n  })))));\n};\n\n_s(Table, \"amMo6LUInpE4vAVAxkVJDLJVgSE=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/mguliyev/Documents/table-app-new/components/table/index.tsx"],"names":["Paper","TableComponent","TableBody","TableContainer","TableFooter","TablePagination","TableRow","React","useState","TableHead","Row","Table","employees","deletedEmployees","onEmployeeChange","onEmployeeDelete","onEmployeeRestore","page","setPage","rowsPerPage","setRowsPerPage","editingEmployeeId","setEditingEmployeeId","handleEditingEmployee","employeeId","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","getEmployees","slice","map","employee","id","label","length"],"mappings":"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","sourcesContent":["import Paper from \"@material-ui/core/Paper\";\nimport TableComponent from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React, { useState } from \"react\";\n\nimport { IEmployee } from \"../../helpers/models\";\nimport TableHead from \"./tableHead\";\nimport Row from \"./tableRow\";\n\ninterface IProps {\n    employees: IEmployee[];\n    deletedEmployees: IEmployee[];\n    onEmployeeChange: (employee: IEmployee) => void;\n    onEmployeeDelete: (employeeId: string) => void;\n    onEmployeeRestore: (employeeId: string) => void;\n}\n\nconst Table: React.FC<IProps> = ({\n    employees,\n    deletedEmployees,\n    onEmployeeChange,\n    onEmployeeDelete,\n    onEmployeeRestore,\n}): JSX.Element => {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [editingEmployeeId, setEditingEmployeeId] = useState<string>(\"\");\n\n    const handleEditingEmployee = (employeeId: string) => {\n        setEditingEmployeeId(employeeId);\n    };\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null, newPage: number) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const getEmployees = () => {\n        if (rowsPerPage > 0) {\n            return employees.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n        }\n\n        return employees;\n    };\n\n    return (\n        <TableContainer component={Paper} elevation={2} variant=\"outlined\">\n            <TableComponent>\n                <TableHead />\n                <TableBody>\n                    {getEmployees().map((employee) => (\n                        <Row\n                            key={employee.id}\n                            employeeData={employee}\n                            deletedEmployees={deletedEmployees}\n                            isEditing={employee.id === editingEmployeeId}\n                            setIsEditing={handleEditingEmployee}\n                            onEmployeeChange={onEmployeeChange}\n                            onEmployeeDelete={onEmployeeDelete}\n                            onEmployeeRestore={onEmployeeRestore}\n                        />\n                    ))}\n                </TableBody>\n                <TableFooter>\n                    <TableRow>\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, { label: \"All\", value: -1 }]}\n                            colSpan={2}\n                            count={employees.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                        />\n                    </TableRow>\n                </TableFooter>\n            </TableComponent>\n        </TableContainer>\n    );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}