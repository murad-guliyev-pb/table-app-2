{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mguliyev/Documents/table-app-new/components/table/tableCell.tsx\",\n    _this = this;\n\nimport { Typography } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React from \"react\";\n\nvar TableCell = function TableCell(_ref) {\n  var value = _ref.value,\n      errors = _ref.errors,\n      isEditing = _ref.isEditing,\n      onChange = _ref.onChange,\n      name = _ref.name;\n  var hasError = errors.includes(name);\n\n  var renderInput = function renderInput() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        \"data-testid\": \"input\",\n        error: hasError,\n        name: name,\n        value: value,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, _this), hasError && /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          color: \"#f44336\"\n        },\n        variant: \"caption\",\n        component: \"p\",\n        children: hasError && value === \"\" ? \"Is mandatory\" : \"Invalid format\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true);\n  };\n\n  var renderText = function renderText() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      paddingY: 1,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        component: \"p\",\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      width: \"120px\"\n    },\n    children: isEditing && name !== \"id\" ? renderInput() : renderText()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, _this);\n};\n\n_c = TableCell;\nexport default TableCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableCell\");","map":{"version":3,"sources":["/Users/mguliyev/Documents/table-app-new/components/table/tableCell.tsx"],"names":["Typography","Box","TextField","React","TableCell","value","errors","isEditing","onChange","name","hasError","includes","renderInput","color","renderText","width"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAYA,IAAMC,SAA2B,GAAG,SAA9BA,SAA8B,OAA+D;AAAA,MAA5DC,KAA4D,QAA5DA,KAA4D;AAAA,MAArDC,MAAqD,QAArDA,MAAqD;AAAA,MAA7CC,SAA6C,QAA7CA,SAA6C;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;AAAA,MAAxBC,IAAwB,QAAxBA,IAAwB;AAC/F,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,QAAP,CAAgBF,IAAhB,CAAjB;;AAEA,MAAMG,WAAW,GAAG,SAAdA,WAAc;AAAA,wBAChB;AAAA,8BACI,QAAC,SAAD;AAAW,uBAAY,OAAvB;AAA+B,QAAA,KAAK,EAAEF,QAAtC;AAAgD,QAAA,IAAI,EAAED,IAAtD;AAA4D,QAAA,KAAK,EAAEJ,KAAnE;AAA0E,QAAA,QAAQ,EAAEG;AAApF;AAAA;AAAA;AAAA;AAAA,eADJ,EAEKE,QAAQ,iBACL,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAE;AAAT,SAAnB;AAAyC,QAAA,OAAO,EAAC,SAAjD;AAA2D,QAAA,SAAS,EAAC,GAArE;AAAA,kBACKH,QAAQ,IAAIL,KAAK,KAAK,EAAtB,GAA2B,cAA3B,GAA4C;AADjD;AAAA;AAAA;AAAA;AAAA,eAHR;AAAA,oBADgB;AAAA,GAApB;;AAUA,MAAMS,UAAU,GAAG,SAAbA,UAAa;AAAA,wBACf,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAE,CAAf;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,SAAS,EAAC,GAA1C;AAAA,kBACKT;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aADe;AAAA,GAAnB;;AAQA,sBAAO,QAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEU,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA,cAAiCR,SAAS,IAAIE,IAAI,KAAK,IAAtB,GAA6BG,WAAW,EAAxC,GAA6CE,UAAU;AAAxF;AAAA;AAAA;AAAA;AAAA,WAAP;AACH,CAtBD;;KAAMV,S;AAwBN,eAAeA,SAAf","sourcesContent":["import { Typography } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React from \"react\";\n\nimport { IEmployee } from \"../helpers/models\";\n\nexport interface IProps {\n    value: string;\n    name: keyof IEmployee;\n    errors: Array<keyof IEmployee>;\n    isEditing: boolean;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst TableCell: React.FC<IProps> = ({ value, errors, isEditing, onChange, name }): JSX.Element => {\n    const hasError = errors.includes(name);\n\n    const renderInput = () => (\n        <>\n            <TextField data-testid=\"input\" error={hasError} name={name} value={value} onChange={onChange} />\n            {hasError && (\n                <Typography style={{ color: \"#f44336\" }} variant=\"caption\" component=\"p\">\n                    {hasError && value === \"\" ? \"Is mandatory\" : \"Invalid format\"}\n                </Typography>\n            )}\n        </>\n    );\n    const renderText = () => (\n        <Box paddingY={1}>\n            <Typography variant=\"subtitle1\" component=\"p\">\n                {value}\n            </Typography>\n        </Box>\n    );\n\n    return <Box style={{ width: \"120px\" }}>{isEditing && name !== \"id\" ? renderInput() : renderText()}</Box>;\n};\n\nexport default TableCell;\n"]},"metadata":{},"sourceType":"module"}