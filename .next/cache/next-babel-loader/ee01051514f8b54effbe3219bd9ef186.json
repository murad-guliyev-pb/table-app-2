{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport TableCellComponent from \"@material-ui/core/TableCell\";\nimport TableRowComponent from \"@material-ui/core/TableRow\";\nimport React, { useEffect, useState } from \"react\";\nimport { validateDateOfBirth, validateName, validatePhoneNumber, validatePosition, validateSurname } from \"../../helpers/utils\";\nimport TableCell from \"./tableCell\";\nimport TableRowActions from \"./tableRowActions\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nvar TableRow = function TableRow(_ref) {\n  var employeeData = _ref.employeeData,\n      deletedEmployees = _ref.deletedEmployees,\n      isEditing = _ref.isEditing,\n      setIsEditing = _ref.setIsEditing,\n      onEmployeeChange = _ref.onEmployeeChange,\n      onEmployeeDelete = _ref.onEmployeeDelete,\n      onEmployeeRestore = _ref.onEmployeeRestore;\n\n  var _useState = useState(false),\n      isDeleted = _useState[0],\n      setIsDeleted = _useState[1];\n\n  var _useState2 = useState(employeeData),\n      employee = _useState2[0],\n      setEmployee = _useState2[1];\n\n  var _useState3 = useState([]),\n      errors = _useState3[0],\n      setErrors = _useState3[1];\n\n  var keys = Object.keys(employee);\n  useEffect(function () {\n    setEmployee(employeeData);\n  }, [employeeData, isEditing]);\n  useEffect(function () {\n    var isEmployeeInDeletedEmployeesList = deletedEmployees.some(function (item) {\n      return item.id === employee.id;\n    });\n    setIsDeleted(isEmployeeInDeletedEmployeesList);\n  }, [deletedEmployees]);\n\n  var validateEmployee = function validateEmployee(employee) {\n    var name = employee.name,\n        surname = employee.surname,\n        dateOfBirth = employee.dateOfBirth,\n        position = employee.position,\n        phoneNumber = employee.phoneNumber;\n    var _errors = [];\n\n    if (name === \"\" || !validateName(name)) {\n      _errors.push(\"name\");\n    }\n\n    if (surname === \"\" || !validateSurname(surname)) {\n      _errors.push(\"surname\");\n    }\n\n    if (dateOfBirth === \"\" || !validateDateOfBirth(dateOfBirth)) {\n      _errors.push(\"dateOfBirth\");\n    }\n\n    if (position === \"\" || !validatePosition(position)) {\n      _errors.push(\"position\");\n    }\n\n    if (phoneNumber === \"\" || !validatePhoneNumber(phoneNumber)) {\n      _errors.push(\"phoneNumber\");\n    }\n\n    setErrors(_errors);\n    return _errors.length === 0;\n  };\n\n  var handleCellChange = function handleCellChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n\n    for (var key in employee) {\n      if (key === name) {\n        var _employee = _objectSpread({}, employee);\n\n        _employee[key] = value;\n        setEmployee(_employee);\n      }\n    }\n  };\n\n  var handleEdit = function handleEdit() {\n    setErrors([]);\n    setIsEditing(employee.id);\n  };\n\n  var handleSave = function handleSave() {\n    if (validateEmployee(employee)) {\n      onEmployeeChange(employee);\n      setIsEditing(\"\");\n    }\n  };\n\n  var handleDelete = function handleDelete() {\n    onEmployeeDelete(employee.id);\n    setIsEditing(\"\");\n  };\n\n  var handleRestore = function handleRestore() {\n    onEmployeeRestore(employee.id);\n  };\n\n  return ___EmotionJSX(TableRowComponent, {\n    style: {\n      backgroundColor: isDeleted ? \"rgba(220, 0, 78, 0.08)\" : \"inherit\"\n    }\n  }, keys.map(function (key) {\n    return ___EmotionJSX(TableCellComponent, {\n      key: key\n    }, ___EmotionJSX(TableCell, {\n      errors: errors,\n      name: key,\n      isEditing: isEditing,\n      value: employee[key],\n      onChange: handleCellChange\n    }));\n  }), ___EmotionJSX(TableCellComponent, null, ___EmotionJSX(TableRowActions, {\n    isEditing: isEditing,\n    isDeleted: isDeleted,\n    onEdit: handleEdit,\n    onSave: handleSave,\n    onDelete: handleDelete,\n    onRestore: handleRestore\n  })));\n};\n\nexport default TableRow;","map":null,"metadata":{},"sourceType":"module"}