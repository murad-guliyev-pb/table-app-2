{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableComponent from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React, { useState } from \"react\";\nimport TableHead from \"./tableHead\";\nimport Row from \"./tableRow\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst Table = ({\n  employees,\n  deletedEmployees,\n  onEmployeeChange,\n  onEmployeeDelete,\n  onEmployeeRestore\n}) => {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const {\n    0: editingEmployeeId,\n    1: setEditingEmployeeId\n  } = useState(\"\");\n\n  const handleEditingEmployee = employeeId => {\n    setEditingEmployeeId(employeeId);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const getEmployees = () => {\n    if (rowsPerPage > 0) {\n      return employees.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n    }\n\n    return employees;\n  };\n\n  return ___EmotionJSX(TableContainer, {\n    component: Paper,\n    elevation: 2,\n    variant: \"outlined\"\n  }, ___EmotionJSX(TableComponent, null, ___EmotionJSX(TableHead, null), ___EmotionJSX(TableBody, null, getEmployees().map(employee => ___EmotionJSX(Row, {\n    key: employee.id,\n    employeeData: employee,\n    deletedEmployees: deletedEmployees,\n    isEditing: employee.id === editingEmployeeId,\n    setIsEditing: handleEditingEmployee,\n    onEmployeeChange: onEmployeeChange,\n    onEmployeeDelete: onEmployeeDelete,\n    onEmployeeRestore: onEmployeeRestore\n  }))), ___EmotionJSX(TableFooter, null, ___EmotionJSX(TableRow, null, ___EmotionJSX(TablePagination, {\n    rowsPerPageOptions: [5, 10, {\n      label: \"All\",\n      value: -1\n    }],\n    colSpan: 2,\n    count: employees.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage\n  })))));\n};\n\nexport default Table;","map":null,"metadata":{},"sourceType":"module"}