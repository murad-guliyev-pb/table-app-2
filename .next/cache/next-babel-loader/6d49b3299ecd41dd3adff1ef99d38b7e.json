{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableComponent from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React, { useState } from \"react\";\nimport TableHead from \"./tableHead\";\nimport Row from \"./tableRow\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nvar Table = function Table(_ref) {\n  var employees = _ref.employees,\n      deletedEmployees = _ref.deletedEmployees,\n      onEmployeeChange = _ref.onEmployeeChange,\n      onEmployeeDelete = _ref.onEmployeeDelete,\n      onEmployeeRestore = _ref.onEmployeeRestore;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(5),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  var _useState = useState(\"\"),\n      editingEmployeeId = _useState[0],\n      setEditingEmployeeId = _useState[1];\n\n  var handleEditingEmployee = function handleEditingEmployee(employeeId) {\n    setEditingEmployeeId(employeeId);\n  };\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  var getEmployees = function getEmployees() {\n    if (rowsPerPage > 0) {\n      return employees.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n    }\n\n    return employees;\n  };\n\n  return ___EmotionJSX(TableContainer, {\n    component: Paper,\n    elevation: 2,\n    variant: \"outlined\"\n  }, ___EmotionJSX(TableComponent, null, ___EmotionJSX(TableHead, null), ___EmotionJSX(TableBody, null, getEmployees().map(function (employee) {\n    return ___EmotionJSX(Row, {\n      key: employee.id,\n      employeeData: employee,\n      deletedEmployees: deletedEmployees,\n      isEditing: employee.id === editingEmployeeId,\n      setIsEditing: handleEditingEmployee,\n      onEmployeeChange: onEmployeeChange,\n      onEmployeeDelete: onEmployeeDelete,\n      onEmployeeRestore: onEmployeeRestore\n    });\n  })), ___EmotionJSX(TableFooter, null, ___EmotionJSX(TableRow, null, ___EmotionJSX(TablePagination, {\n    rowsPerPageOptions: [5, 10, {\n      label: \"All\",\n      value: -1\n    }],\n    colSpan: 2,\n    count: employees.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage\n  })))));\n};\n\nexport default Table;","map":null,"metadata":{},"sourceType":"module"}