{"ast":null,"code":"export const validateName = value => {\n  return /^[A-Za-z\\s-]+$/.test(value);\n};\nexport const validateSurname = value => {\n  return /^[A-Za-z\\s-]+$/.test(value);\n};\nexport const validatePosition = value => {\n  return /^[A-Za-z\\s-]+$/.test(value);\n};\nexport const validateDateOfBirth = value => {\n  return /^\\d{1,2}-\\d{1,2}-\\d{4}$/.test(value);\n};\nexport const validatePhoneNumber = value => {\n  return /^[\\d +-]+$/.test(value);\n};\n\nconst sleep = milliseconds => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n};","map":{"version":3,"sources":["/Users/mguliyev/Documents/table-app-new/helpers/utils.ts"],"names":["validateName","value","test","validateSurname","validatePosition","validateDateOfBirth","validatePhoneNumber","sleep","milliseconds","Promise","resolve","setTimeout"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAIC,KAAD,IAA4B;AACpD,SAAO,iBAAiBC,IAAjB,CAAsBD,KAAtB,CAAP;AACH,CAFM;AAIP,OAAO,MAAME,eAAe,GAAIF,KAAD,IAA4B;AACvD,SAAO,iBAAiBC,IAAjB,CAAsBD,KAAtB,CAAP;AACH,CAFM;AAIP,OAAO,MAAMG,gBAAgB,GAAIH,KAAD,IAA4B;AACxD,SAAO,iBAAiBC,IAAjB,CAAsBD,KAAtB,CAAP;AACH,CAFM;AAIP,OAAO,MAAMI,mBAAmB,GAAIJ,KAAD,IAA4B;AAC3D,SAAO,0BAA0BC,IAA1B,CAA+BD,KAA/B,CAAP;AACH,CAFM;AAIP,OAAO,MAAMK,mBAAmB,GAAIL,KAAD,IAA4B;AAC3D,SAAO,aAAaC,IAAb,CAAkBD,KAAlB,CAAP;AACH,CAFM;;AAIP,MAAMM,KAAK,GAAIC,YAAD,IAA0B;AACpC,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUF,YAAV,CAAnC,CAAP;AACH,CAFD","sourcesContent":["export const validateName = (value: string): boolean => {\n    return /^[A-Za-z\\s-]+$/.test(value);\n};\n\nexport const validateSurname = (value: string): boolean => {\n    return /^[A-Za-z\\s-]+$/.test(value);\n};\n\nexport const validatePosition = (value: string): boolean => {\n    return /^[A-Za-z\\s-]+$/.test(value);\n};\n\nexport const validateDateOfBirth = (value: string): boolean => {\n    return /^\\d{1,2}-\\d{1,2}-\\d{4}$/.test(value);\n};\n\nexport const validatePhoneNumber = (value: string): boolean => {\n    return /^[\\d +-]+$/.test(value);\n};\n\nconst sleep = (milliseconds: number) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n};\n"]},"metadata":{},"sourceType":"module"}