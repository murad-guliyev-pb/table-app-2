{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mguliyev/Documents/table-app-new/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Container, Grid, TextField, Typography } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport { isEqual } from \"lodash\";\nimport React, { useState } from \"react\";\nimport useSWR from \"swr\";\nimport Table from \"../components/table\";\nimport UpdatedEmployees from \"../components/updatedEmployees\";\nimport { fetcher } from \"../helpers/models\";\n\nvar App = function App(_ref) {\n  _s();\n\n  var initialData = _ref.initialData;\n\n  var _useSWR = useSWR(\"/api/employees\", fetcher, {\n    initialData: initialData\n  }),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 23\n  }, _this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 23\n  }, _this);\n  var employeesList = data;\n\n  var _useState = useState([]),\n      deletedEmployees = _useState[0],\n      setDeletedEmployees = _useState[1];\n\n  var _useState2 = useState([]),\n      editedEmployees = _useState2[0],\n      setEditedEmployees = _useState2[1];\n\n  var _useState3 = useState(employeesList),\n      employees = _useState3[0],\n      setEmployees = _useState3[1];\n\n  var _useState4 = useState(false),\n      isSubmited = _useState4[0],\n      setIsSubmited = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      searchValue = _useState5[0],\n      setSearchValue = _useState5[1]; // Helpers\n\n\n  var isEmployeeEqualToInitial = function isEmployeeEqualToInitial(employee) {\n    var initialEmployee = employeesList.find(function (item) {\n      return item.id === employee.id;\n    });\n    return isEqual(employee, initialEmployee);\n  };\n\n  var existsInEditedEmployees = function existsInEditedEmployees(employeeId) {\n    return editedEmployees.some(function (item) {\n      return item.id === employeeId;\n    });\n  };\n\n  var removeEmployeeFromEditedEmployees = function removeEmployeeFromEditedEmployees(employeeId) {\n    if (existsInEditedEmployees(employeeId)) {\n      var filtered = editedEmployees.filter(function (item) {\n        return item.id !== employeeId;\n      });\n      setEditedEmployees(filtered);\n    }\n  };\n\n  var addEmployeeToEditedEmployees = function addEmployeeToEditedEmployees(employee) {\n    if (!existsInEditedEmployees(employee.id)) {\n      setEditedEmployees([].concat(_toConsumableArray(editedEmployees), [employee]));\n    }\n  };\n\n  var replaceEmployeeInEditedEmployees = function replaceEmployeeInEditedEmployees(employee) {\n    var updatedEmployees = editedEmployees.map(function (item) {\n      return item.id === employee.id ? employee : item;\n    });\n    setEditedEmployees(updatedEmployees);\n  };\n\n  var addRestoredEmployeeToEditedEmployees = function addRestoredEmployeeToEditedEmployees(employeeId) {\n    var restoredEmployee = employees.find(function (item) {\n      return item.id === employeeId;\n    });\n\n    if (restoredEmployee && !isEmployeeEqualToInitial(restoredEmployee)) {\n      addEmployeeToEditedEmployees(restoredEmployee);\n    }\n  }; // Handlers\n\n\n  var handleEmployeeChange = function handleEmployeeChange(employee) {\n    if (isEmployeeEqualToInitial(employee)) {\n      removeEmployeeFromEditedEmployees(employee.id);\n    } else {\n      if (existsInEditedEmployees(employee.id)) {\n        replaceEmployeeInEditedEmployees(employee);\n      } else {\n        addEmployeeToEditedEmployees(employee);\n      }\n    }\n\n    var updatedEmployees = employees.map(function (item) {\n      return item.id === employee.id ? employee : item;\n    });\n    setEmployees(updatedEmployees);\n  };\n\n  var handleEmployeeDelete = function handleEmployeeDelete(employeeId) {\n    var deletedEmployee = employees.find(function (item) {\n      return item.id === employeeId;\n    });\n\n    if (deletedEmployee) {\n      setDeletedEmployees([].concat(_toConsumableArray(deletedEmployees), [deletedEmployee]));\n    }\n\n    removeEmployeeFromEditedEmployees(employeeId);\n  };\n\n  var handleEmployeeRestore = function handleEmployeeRestore(employeeId) {\n    var filtered = deletedEmployees.filter(function (item) {\n      return item.id !== employeeId;\n    });\n    setDeletedEmployees(filtered);\n    addRestoredEmployeeToEditedEmployees(employeeId);\n  };\n\n  var resetToInitial = function resetToInitial() {\n    setIsSubmited(false);\n    setEmployees(employeesList);\n    setEditedEmployees([]);\n    setDeletedEmployees([]);\n  };\n\n  var getEmployees = function getEmployees() {\n    var filtered = employees.filter(function (item) {\n      var values = Object.values(item);\n\n      for (var _i = 0, _values = values; _i < _values.length; _i++) {\n        var val = _values[_i];\n\n        if (val.toLowerCase().includes(searchValue.toLocaleLowerCase())) {\n          return item;\n        }\n      }\n    });\n    return filtered;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        backgroundColor: \"#1976d2\",\n        color: \"white\",\n        padding: \"12px 0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h4\",\n          children: \"Table Application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        marginY: 5,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          marginBottom: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justify: \"flex-end\",\n            alignItems: \"flex-end\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              marginRight: 1,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                component: \"p\",\n                children: \"Search:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n              value: searchValue,\n              onChange: function onChange(event) {\n                return setSearchValue(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, _this), employees.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n          employees: getEmployees(),\n          deletedEmployees: deletedEmployees,\n          onEmployeeChange: handleEmployeeChange,\n          onEmployeeDelete: handleEmployeeDelete,\n          onEmployeeRestore: handleEmployeeRestore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(Box, {\n          marginTop: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justify: \"flex-end\",\n            alignItems: \"baseline\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              marginRight: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  backgroundColor: \"#1976d2\"\n                },\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: function onClick() {\n                  return setIsSubmited(true);\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: resetToInitial,\n              children: \"Reset to initial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, _this), isSubmited && /*#__PURE__*/_jsxDEV(Box, {\n          marginTop: 5,\n          children: /*#__PURE__*/_jsxDEV(UpdatedEmployees, {\n            deletedEmployees: deletedEmployees,\n            editedEmployees: editedEmployees\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(App, \"apjLow/+oRWXYK0pV+mCJnOoi7g=\", false, function () {\n  return [useSWR];\n});\n\n_c = App;\nexport var __N_SSP = true;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mguliyev/Documents/table-app-new/pages/index.tsx"],"names":["Button","Container","Grid","TextField","Typography","Box","isEqual","React","useState","useSWR","Table","UpdatedEmployees","fetcher","App","initialData","data","error","employeesList","deletedEmployees","setDeletedEmployees","editedEmployees","setEditedEmployees","employees","setEmployees","isSubmited","setIsSubmited","searchValue","setSearchValue","isEmployeeEqualToInitial","employee","initialEmployee","find","item","id","existsInEditedEmployees","employeeId","some","removeEmployeeFromEditedEmployees","filtered","filter","addEmployeeToEditedEmployees","replaceEmployeeInEditedEmployees","updatedEmployees","map","addRestoredEmployeeToEditedEmployees","restoredEmployee","handleEmployeeChange","handleEmployeeDelete","deletedEmployee","handleEmployeeRestore","resetToInitial","getEmployees","values","Object","val","toLowerCase","includes","toLocaleLowerCase","backgroundColor","color","padding","event","target","value","length"],"mappings":"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","sourcesContent":["import { Button, Container, Grid, TextField, Typography } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport { isEqual } from \"lodash\";\nimport React, { useState } from \"react\";\nimport useSWR from \"swr\";\n\nimport Table from \"../components/table\";\nimport UpdatedEmployees from \"../components/updatedEmployees\";\nimport { fetcher, IEmployee } from \"../helpers/models\";\n\nconst App = ({ initialData }): JSX.Element => {\n    const { data, error } = useSWR(\"/api/employees\", fetcher, { initialData });\n\n    if (error) return <div>failed to load</div>;\n    if (!data) return <div>loading...</div>;\n\n    const employeesList = data;\n\n    const [deletedEmployees, setDeletedEmployees] = useState<IEmployee[]>([]);\n    const [editedEmployees, setEditedEmployees] = useState<IEmployee[]>([]);\n    const [employees, setEmployees] = useState<IEmployee[]>(employeesList);\n    const [isSubmited, setIsSubmited] = useState<boolean>(false);\n    const [searchValue, setSearchValue] = useState<string>(\"\");\n\n    // Helpers\n    const isEmployeeEqualToInitial = (employee: IEmployee) => {\n        const initialEmployee = employeesList.find((item) => item.id === employee.id);\n        return isEqual(employee, initialEmployee);\n    };\n\n    const existsInEditedEmployees = (employeeId: string) => {\n        return editedEmployees.some((item) => item.id === employeeId);\n    };\n\n    const removeEmployeeFromEditedEmployees = (employeeId: string) => {\n        if (existsInEditedEmployees(employeeId)) {\n            const filtered = editedEmployees.filter((item) => item.id !== employeeId);\n            setEditedEmployees(filtered);\n        }\n    };\n\n    const addEmployeeToEditedEmployees = (employee: IEmployee) => {\n        if (!existsInEditedEmployees(employee.id)) {\n            setEditedEmployees([...editedEmployees, employee]);\n        }\n    };\n\n    const replaceEmployeeInEditedEmployees = (employee: IEmployee) => {\n        const updatedEmployees = editedEmployees.map((item) => (item.id === employee.id ? employee : item));\n        setEditedEmployees(updatedEmployees);\n    };\n\n    const addRestoredEmployeeToEditedEmployees = (employeeId: string) => {\n        const restoredEmployee = employees.find((item) => item.id === employeeId);\n        if (restoredEmployee && !isEmployeeEqualToInitial(restoredEmployee)) {\n            addEmployeeToEditedEmployees(restoredEmployee);\n        }\n    };\n\n    // Handlers\n    const handleEmployeeChange = (employee: IEmployee) => {\n        if (isEmployeeEqualToInitial(employee)) {\n            removeEmployeeFromEditedEmployees(employee.id);\n        } else {\n            if (existsInEditedEmployees(employee.id)) {\n                replaceEmployeeInEditedEmployees(employee);\n            } else {\n                addEmployeeToEditedEmployees(employee);\n            }\n        }\n\n        const updatedEmployees = employees.map((item) => (item.id === employee.id ? employee : item));\n        setEmployees(updatedEmployees);\n    };\n\n    const handleEmployeeDelete = (employeeId: string) => {\n        const deletedEmployee = employees.find((item) => item.id === employeeId);\n        if (deletedEmployee) {\n            setDeletedEmployees([...deletedEmployees, deletedEmployee]);\n        }\n\n        removeEmployeeFromEditedEmployees(employeeId);\n    };\n\n    const handleEmployeeRestore = (employeeId: string) => {\n        const filtered = deletedEmployees.filter((item) => item.id !== employeeId);\n        setDeletedEmployees(filtered);\n\n        addRestoredEmployeeToEditedEmployees(employeeId);\n    };\n\n    const resetToInitial = () => {\n        setIsSubmited(false);\n        setEmployees(employeesList);\n        setEditedEmployees([]);\n        setDeletedEmployees([]);\n    };\n\n    const getEmployees = () => {\n        const filtered = employees.filter((item) => {\n            const values = Object.values(item);\n            for (const val of values) {\n                if (val.toLowerCase().includes(searchValue.toLocaleLowerCase())) {\n                    return item;\n                }\n            }\n        });\n        return filtered;\n    };\n\n    return (\n        <>\n            <Box style={{ backgroundColor: \"#1976d2\", color: \"white\", padding: \"12px 0\" }}>\n                <Grid container direction=\"row\" justify=\"center\">\n                    <Typography variant=\"h4\" component=\"h4\">\n                        Table Application\n                    </Typography>\n                </Grid>\n            </Box>\n            <Container maxWidth={\"lg\"}>\n                <Box marginY={5}>\n                    <Box marginBottom={2}>\n                        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\n                            <Box marginRight={1}>\n                                <Typography variant=\"subtitle1\" component=\"p\">\n                                    Search:\n                                </Typography>\n                            </Box>\n                            <TextField value={searchValue} onChange={(event) => setSearchValue(event.target.value)} />\n                        </Grid>\n                    </Box>\n                    {employees.length > 0 && (\n                        <Table\n                            employees={getEmployees()}\n                            deletedEmployees={deletedEmployees}\n                            onEmployeeChange={handleEmployeeChange}\n                            onEmployeeDelete={handleEmployeeDelete}\n                            onEmployeeRestore={handleEmployeeRestore}\n                        />\n                    )}\n                    <Box marginTop={2}>\n                        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"baseline\">\n                            <Box marginRight={1}>\n                                <Button\n                                    style={{ backgroundColor: \"#1976d2\" }}\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={() => setIsSubmited(true)}\n                                >\n                                    Submit\n                                </Button>\n                            </Box>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={resetToInitial}>\n                                Reset to initial\n                            </Button>\n                        </Grid>\n                    </Box>\n                    {isSubmited && (\n                        <Box marginTop={5}>\n                            <UpdatedEmployees deletedEmployees={deletedEmployees} editedEmployees={editedEmployees} />\n                        </Box>\n                    )}\n                </Box>\n            </Container>\n        </>\n    );\n};\n\nexport async function getServerSideProps() {\n    const res = await fetch(`/api/employees`);\n    const data = await res.json();\n\n    // Pass data to the page via props\n    return { props: { data } };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}